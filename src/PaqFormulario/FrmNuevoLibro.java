/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PaqFormulario;

import clases.Conexion;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JulFX
 */
public class FrmNuevoLibro extends javax.swing.JDialog {

    private Connection cn = null;
    static Conexion con;
    private ResultSet rs = null;
    private ResultSet rsSer = null;
    private Statement st = null;
    public String SerCod = null;
    private String PasUsu = null;
    public boolean botonagregar = false;
    public boolean botonmodificar = false;
    public boolean botonborrar = false;
    private String cantidadAnterior;

    /**
     * Creates new form FrmCarrera
     */
    public FrmNuevoLibro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        centrar();
        botonEnter();
        //System.out.println("host: " + AcesoUsuario.host);
        con = new Conexion(AcesoUsuario.host, AcesoUsuario.base, AcesoUsuario.user, AcesoUsuario.pass);
        ActualizarGrilla();
    }

    public void centrar() {
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frame = this.getSize();
        setLocation((pantalla.width / 2 - (frame.width / 2)), pantalla.height / 2 - (frame.height / 2));

    }

    private void botonEnter() {
        InputMap map = new InputMap();
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");
        btnAgr.setInputMap(0, map);
        this.btnCan.setInputMap(0, map);
        this.btnGra.setInputMap(0, map);
        this.btnMod.setInputMap(0, map);
        this.btnSal.setInputMap(0, map);
    }

    private void vaciarTabla() {
        int i = 0;

        while (i != TablaUsuario.getRowCount()) {
            TablaUsuario.setValueAt("", i, 0);
            TablaUsuario.setValueAt("", i, 1);
            i++;
        }
    }

    private boolean validar(String query) {
        boolean ban = true;
        try {
            // System.out.println(query);

            rs = con.Consulta(query);
            if (rs.next() == false) {
                ban = false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ban;
    }

    private void ActualizarGrilla() {
        String Nombre = null;
        try {

            int c = 0;
            vaciarTabla();
            String sql = "SELECT *"
                    + " FROM libro"
                    + " ORDER BY lib_des";
            //System.out.println(sql);
            rs = con.Consulta(sql);
            if (rs.next() == true) {
                rs.beforeFirst();
                while (rs.next()) {
                    if (TablaUsuario.getRowCount() <= rs.getRow() - 1) {
                        DefaultTableModel tm = (DefaultTableModel) TablaUsuario.getModel();
                        tm.addRow(new Object[]{new String(""), new String("")});
                        TablaUsuario.setModel(tm);
                    }
                    Nombre = rs.getString("lib_des");
                    TablaUsuario.setValueAt(rs.getString(1), c, 0);
                    TablaUsuario.setValueAt(Nombre, c, 1);
                    c++;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean comparar(String sql) {
        boolean r = false;
        try {
            rs = con.Consulta(sql);
            if (rs.next()) {
                r = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
        return r;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JPopupMenu();
        menBaja = new javax.swing.JMenuItem();
        menNuevo = new javax.swing.JMenuItem();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaUsuario = new javax.swing.JTable();
        jPanel = new javax.swing.JPanel();
        btnAgr = new javax.swing.JButton();
        btnMod = new javax.swing.JButton();
        btnGra = new javax.swing.JButton();
        btnCan = new javax.swing.JButton();
        btnSal = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtCod = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtCan = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtSto = new javax.swing.JTextField();

        menBaja.setText("Dar de Baja");
        menBaja.setToolTipText("");
        menBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menBajaActionPerformed(evt);
            }
        });
        menu.add(menBaja);

        menNuevo.setText("Agregar Libro a Stock");
        menNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menNuevoActionPerformed(evt);
            }
        });
        menu.add(menNuevo);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 153, 0));
        jLabel3.setText("Libros");

        TablaUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Descripci√≥n"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaUsuario.getTableHeader().setReorderingAllowed(false);
        TablaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TablaUsuarioMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TablaUsuario);
        TablaUsuario.getColumnModel().getColumn(0).setPreferredWidth(100);
        TablaUsuario.getColumnModel().getColumn(0).setMaxWidth(100);

        jPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAgr.setText("Agregar"); // NOI18N
        btnAgr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgrActionPerformed(evt);
            }
        });
        btnAgr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAgrKeyPressed(evt);
            }
        });

        btnMod.setText("Modificar"); // NOI18N
        btnMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModActionPerformed(evt);
            }
        });
        btnMod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnModKeyPressed(evt);
            }
        });

        btnGra.setText("Grabar"); // NOI18N
        btnGra.setEnabled(false);
        btnGra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraActionPerformed(evt);
            }
        });
        btnGra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnGraFocusGained(evt);
            }
        });
        btnGra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGraKeyPressed(evt);
            }
        });

        btnCan.setText("Cancelar"); // NOI18N
        btnCan.setEnabled(false);
        btnCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanActionPerformed(evt);
            }
        });
        btnCan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCanKeyPressed(evt);
            }
        });

        btnSal.setText("Cerrar"); // NOI18N
        btnSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalActionPerformed(evt);
            }
        });
        btnSal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalKeyPressed(evt);
            }
        });

        jLabel13.setText("Codigo"); // NOI18N

        txtNom.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNom.setEnabled(false);
        txtNom.setNextFocusableComponent(txtCan);

        txtCod.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCod.setEnabled(false);
        txtCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodActionPerformed(evt);
            }
        });

        jLabel18.setText("Descripci√≥n"); // NOI18N

        jLabel14.setText("Cantidad"); // NOI18N

        txtCan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtCan.setEnabled(false);
        txtCan.setNextFocusableComponent(btnGra);
        txtCan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCanFocusGained(evt);
            }
        });

        jLabel19.setText("Stock Actual"); // NOI18N

        txtSto.setEditable(false);
        txtSto.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSto.setNextFocusableComponent(btnGra);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCan, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(btnAgr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMod, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnGra, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCan, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAgr, btnCan, btnGra, btnMod, btnSal});

        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)))
                .addGap(10, 10, 10)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAgr)
                    .addComponent(btnMod, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGra)
                    .addComponent(btnCan)
                    .addComponent(btnSal))
                .addContainerGap())
        );

        jPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAgr, btnCan, btnGra, btnMod, btnSal});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel3))
                    .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgrActionPerformed
        try {
            botonagregar = true;
            String sql = "Select ifnull(max(lib_cod),0)+1 codigo From libro";
            //System.out.println(sql);
            rs = con.Consulta(sql);
            rs.next();
            this.txtCod.setText(rs.getString("codigo"));
            btnAgr.setEnabled(false);
            btnMod.setEnabled(false);
            btnCan.setEnabled(true);
            txtNom.setEnabled(true);
            txtNom.grabFocus();
            txtCan.setEnabled(true);
        } catch (SQLException ex) {
            Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAgrActionPerformed

    private void btnAgrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAgrKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.btnMod.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.btnSal.grabFocus();
        }
    }//GEN-LAST:event_btnAgrKeyPressed

    private void btnModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModActionPerformed
        botonmodificar = true;
        txtCod.setEnabled(true);
        txtCod.grabFocus();
        btnAgr.setEnabled(false);
        btnMod.setEnabled(false);
        btnCan.setEnabled(true);
        btnGra.setEnabled(true);
    }//GEN-LAST:event_btnModActionPerformed

    private void btnModKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnModKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.btnSal.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            btnAgr.grabFocus();
        }
    }//GEN-LAST:event_btnModKeyPressed

    private void btnGraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraActionPerformed
        int res = JOptionPane.showConfirmDialog(null, "Realmente, ¬øDesea Grabar"
                + " los Datos?", "Mensaje", JOptionPane.OK_CANCEL_OPTION);

        if (res == JOptionPane.OK_OPTION) {
            if (botonagregar == true) {
                String sql = "INSERT INTO libro (lib_cod,lib_des,lib_can,stock)"
                        + " VALUES (" + txtCod.getText() + ",'" + txtNom.getText() + "',"
                        + txtCan.getText() + "," + txtSto.getText() + ")";
                //System.out.println(sql);
                con.Guardar(sql);
                ActualizarGrilla();
                botonagregar = false;
            }
            if (botonmodificar == true) {
                
                String update = "UPDATE libro SET "
                        + "lib_des='" + this.txtNom.getText()
                        + "' WHERE lib_cod=" + this.txtCod.getText();
                System.out.println(update);
                con.Guardar(update);
                ActualizarGrilla();
                botonmodificar = false;
            }
            try {
                if (FrmAlumno.ventanaemergente == true) {
                    FrmAlumno.texto = txtNom.getText();
                    this.dispose();
                }
            } catch (NullPointerException n) {
            }
            //JOptionPane.showMessageDialog(null, "Los datos se guardaron correctamente");
            this.btnCan.doClick();
        } else {
            this.btnCan.doClick();
        }
    }//GEN-LAST:event_btnGraActionPerformed

    private void btnGraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGraKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.btnCan.grabFocus();
        }
    }//GEN-LAST:event_btnGraKeyPressed

    private void btnCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanActionPerformed
        botonagregar = false;
        botonborrar = false;
        botonmodificar = false;
        this.btnCan.setEnabled(false);
        this.btnGra.setEnabled(false);
        btnAgr.setEnabled(true);
        btnMod.setEnabled(true);
        txtCod.setText("");
        txtNom.setText("");
        txtNom.setEnabled(false);
        txtCan.setText("");
        txtCan.setEnabled(false);
        txtSto.setText("");
        txtSto.setEnabled(false);
        btnAgr.grabFocus();
    }//GEN-LAST:event_btnCanActionPerformed

    private void btnCanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCanKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            this.btnSal.grabFocus();
        } else if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.btnGra.grabFocus();
        }
    }//GEN-LAST:event_btnCanKeyPressed

    private void btnSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalActionPerformed

    private void btnSalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            this.btnMod.grabFocus();
        }
    }//GEN-LAST:event_btnSalKeyPressed

    private void txtCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodActionPerformed
        String sql1 = "SELECT * FROM libro WHERE  lib_cod=" + txtCod.getText();

        if (FrmPrincipal.isNumeric(txtCod.getText())) {
            if (validar(sql1) == true) {

                if (botonmodificar == true) {
                    try {
                        String sql = "Select * FROM libro "
                                + "WHERE lib_cod=" + this.txtCod.getText();
                        //System.out.println(sql);
                        rs = con.Consulta(sql);
                        rs.next();
                        txtNom.setText(rs.getString("lib_des"));
                        txtNom.setEnabled(true);
                        txtNom.grabFocus();
                        txtCan.setText(rs.getString("lib_can"));
                        txtSto.setText(rs.getString("stock"));
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                this.txtCod.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "El Codigo No Existe");
                this.txtCod.setText("");
                this.txtCod.grabFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Solo puede Ingresar Numeros");
            this.txtCod.setText("");
            this.txtCod.grabFocus();
        }
    }//GEN-LAST:event_txtCodActionPerformed

    private void txtCanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCanFocusGained
        if (txtNom.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo nombre no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (botonagregar == true) {
            String sql = "SELECT * FROM libro WHERE lib_des='" + txtNom.getText() + "'";
            if (comparar(sql) == false) {
                txtNom.setText(txtNom.getText().toUpperCase());
                btnGra.setEnabled(true);
            } else {
                txtNom.grabFocus();
                JOptionPane.showMessageDialog(this, "La descripci√≥n ya existe!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtCanFocusGained

    private void btnGraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnGraFocusGained
        if (txtCan.getText().isEmpty()) {
            txtCan.grabFocus();
            JOptionPane.showMessageDialog(this, "El campo Cantidad no puede estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (botonagregar == true) {
                int stock;
                if (txtSto.getText().isEmpty()) {
                    stock = 0;
                } else {
                    stock = Integer.parseInt(txtSto.getText());
                }
                int suma = Integer.parseInt(txtCan.getText()) + stock;
                txtSto.setText(String.valueOf(suma));
            }
        }
    }//GEN-LAST:event_btnGraFocusGained

    private void menBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menBajaActionPerformed
        try {
            int res = JOptionPane.showConfirmDialog(null, "Realmente, ¬øDesea dar de baja"
                    + " al libro "+ TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 1) +" ?", "Mensaje", JOptionPane.OK_CANCEL_OPTION);
            String sql="SELECT lib_can,stock FROM libro WHERE lib_cod="
                    +TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 0);
            //System.out.println(sql);
            rs=con.Consulta(sql);
            rs.next();int cantidadBD=rs.getInt(1);int StockBD=rs.getInt(2);
            if (res == JOptionPane.OK_OPTION) {
                String can = JOptionPane.showInputDialog(null, "Ingrese Cantidad: ");
                        if (!can.isEmpty()) {
                       int suma=cantidadBD-Integer.valueOf(can);
                       int sumaSto=StockBD-Integer.valueOf(can); 
                       if(sumaSto>=0){
                     String update = "UPDATE libro SET "
                            + "lib_can=" + suma
                             + ",stock=" + sumaSto
                            + " WHERE lib_cod=" + TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 0);
                    //System.out.println(update);
                    con.Guardar(update);
                    JOptionPane.showMessageDialog(null, "Se descont√≥ correctamente");
                            }else{
                           JOptionPane.showMessageDialog(null, "La cantidad excede al Stock Actual","Error",
                                   JOptionPane.ERROR_MESSAGE);
                       }
                        }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menBajaActionPerformed

    private void TablaUsuarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaUsuarioMouseReleased
        if (evt.isPopupTrigger()) {
            menu.show(TablaUsuario, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_TablaUsuarioMouseReleased

    private void menNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menNuevoActionPerformed
        try {
            int res = JOptionPane.showConfirmDialog(null, "Realmente, ¬øDesea agregar"
                    + " el libro "+ TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 1) +" ?", "Mensaje", JOptionPane.OK_CANCEL_OPTION);
            String sql="SELECT lib_can,stock FROM libro WHERE lib_cod="
                    +TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 0);
            //System.out.println(sql);
            rs=con.Consulta(sql);
            rs.next();int cantidadBD=rs.getInt(1);int StockBD=rs.getInt(2);
            if (res == JOptionPane.OK_OPTION) {
                String can = JOptionPane.showInputDialog(null, "Ingrese Cantidad: ");
                        if (!can.isEmpty()) {
                       int sumaCan=cantidadBD+Integer.valueOf(can);     
                       int sumaSto=StockBD+Integer.valueOf(can);     
                     String update = "UPDATE libro SET "
                             + "lib_can=" + sumaCan
                            + ",stock=" + sumaSto
                            + " WHERE lib_cod=" + TablaUsuario.getValueAt(TablaUsuario.getSelectedRow(), 0);
                    //System.out.println(update);
                    con.Guardar(update);
                    JOptionPane.showMessageDialog(null, "Se descont√≥ correctamente");
                        }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmNuevoLibro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmNuevoLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmNuevoLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmNuevoLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmNuevoLibro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmNuevoLibro dialog = new FrmNuevoLibro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaUsuario;
    public javax.swing.JButton btnAgr;
    private javax.swing.JButton btnCan;
    private javax.swing.JButton btnGra;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnSal;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem menBaja;
    private javax.swing.JMenuItem menNuevo;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JTextField txtCan;
    private javax.swing.JTextField txtCod;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtSto;
    // End of variables declaration//GEN-END:variables
}
